import DefaultApp from "@/tools/default.app";
import DefaultLayout from "@/tools/default.app";
import { AppProps } from "next/app";
import { useRouter } from "next/router";
import React from "react";
import { Hydrate, QueryClient, QueryClientProvider } from "react-query";
import { RecoilRoot } from "recoil";
import "@/styles/global.css";
import "@/styles/layout.css";
import "@/styles/antd.global.css";
import Head from "next/head";
import { i18nInit } from "@/locales/i18next";

export const queryClient = new QueryClient({
    defaultOptions: {
        queries: {
            retry: 0,
            suspense: true,
            useErrorBoundary: true,
        },
        mutations: {
            useErrorBoundary: true,
        },
    },
});
i18nInit();
export default function MyApp({ Component, pageProps }: AppProps) {
    const router = useRouter();

    if (router.pathname === "/404" || router.pathname === "/500") {
        return <Component {...pageProps} />;
    }

    return (
        <QueryClientProvider client={queryClient}>
            <Hydrate state={pageProps.dehydratedState}>
                <RecoilRoot>
                    <React.Suspense fallback={<div>Loading...</div>}>
                        <Head>
                            <title>My new cool app</title>
                            <meta
                                name="viewport"
                                content="width=device-width, initial-scale=1.0, maximum-scale=1.0,user-scalable=0"
                            />
                            <meta
                                name="description"
                                content="Generated by create next app"
                            />
                            {/* <link rel="icon" href="/favicon.ico" /> */}
                        </Head>
                        <DefaultApp>
                            <DefaultLayout>
                                <Component {...pageProps} />
                            </DefaultLayout>
                        </DefaultApp>
                    </React.Suspense>
                </RecoilRoot>
            </Hydrate>
        </QueryClientProvider>
    );
}
